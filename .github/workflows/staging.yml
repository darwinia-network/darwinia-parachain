name: Staging

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  RUST_TOOLCHAIN: nightly

jobs:
  build-package:
    name: Build package
    runs-on: ubuntu-latest
    container:
      image: ubuntu:18.04
    steps:
      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          apt update -y
          apt install --no-install-recommends -y \
            ca-certificates curl git \
            clang make gcc g++
          pip install cmake --upgrade
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      - name: Fetch latest code
        uses: actions/checkout@v3
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked
      - name: Collect shared
        run: |
          mkdir -p shared
          tar cjSf \
            shared/darwinia-parachain-x86_64-linux-gnu.tar.bz2 \
            -C \
            target/release \
            darwinia-parachain
      - name: Upload shared
        uses: actions/upload-artifact@v2
        with:
          name: darwinia-artifact
          path: shared

  build-docker-image:
    name: Build image
    runs-on: ubuntu-latest
    needs: [build-package]
    steps:
      - name: Fetch latest code
        uses: actions/checkout@v3
      - name: Docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.QUAY_IO_BOT_USERNAME }}
          password: ${{ secrets.QUAY_IO_BOT_PASSWORD }}
          registry: quay.io
      - name: Download shared
        uses: actions/download-artifact@v2
        with:
          name: darwinia-artifact
          path: shared
      - name: Extract shared
        run: |
          mkdir -p dist
          tar -xvf shared/darwinia-parachain-x86_64-linux-gnu.tar.bz2 -C dist/
      - name: Hash commit
        uses: benjlevesque/short-sha@v1.2
        id: short-sha
      - name: Build and publish docker image
        run: |
          IMAGE_NAME=darwinia-parachain
          IMAGE_PREFIX=quay.io/darwinia-network
          IMAGE_PUSH_NAME_SHA=${IMAGE_PREFIX}/${IMAGE_NAME}:sha-${SHA}
          docker build \
            -t ${IMAGE_PUSH_NAME_SHA} \
            -f .maintain/docker/Dockerfile \
            .
          docker push ${IMAGE_PUSH_NAME_SHA}

  clean-artifacts:
    name: Clean artifacts
    runs-on: ubuntu-latest
    needs: [build-docker-image]
    if: always()
    steps:
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: darwinia-artifact
