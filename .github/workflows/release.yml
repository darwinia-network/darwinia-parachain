name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+"

env:
  RUST_TOOLCHAIN: nightly

jobs:
  ##
  # Build page
  ##
  build-package:
    name: Build package
    runs-on: ubuntu-latest
    container:
      image: ubuntu:18.04
    steps:
      - name: Install dependencies
        run: |
          apt update -y
          apt install --no-install-recommends -y \
            ca-certificates curl git python3-pip zstd \
            clang make gcc g++
          pip3 install --upgrade pip
          pip3 install cmake --upgrade
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      - name: Fetch latest code
        uses: actions/checkout@v3
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked
      - name: Collect shared
        run: |
          mkdir -p shared/crab-parachain-runtime
          mkdir -p shared/darwinia-parachain-runtime
          tar cjSf \
            shared/darwinia-parachain-x86_64-linux-gnu.tar.bz2 \
            -C \
            target/release \
            darwinia-parachain
          tar cf shared/darwinia-parachain-x86_64-linux-gnu.tar.zst \
            -C \
            target/release \
            darwinia-parachain -I pzstd
          mv \
            target/release/wbuild/crab-parachain-runtime/*.compressed.wasm \
            shared/crab-parachain-runtime
          mv \
            target/release/wbuild/darwinia-parachain-runtime/*.compressed.wasm \
            shared/darwinia-parachain-runtime
      - name: Upload shared
        uses: actions/upload-artifact@v2
        with:
          name: darwinia-artifact
          path: shared

  ##
  # Generate subwasm info
  ##
  build-subwasm:
    name: Generate subwasm info
    runs-on: ubuntu-latest
    needs: [build-package]
    strategy:
      matrix:
        runtime: [crab-parachain-runtime, darwinia-parachain-runtime]
      max-parallel: 1
    steps:
      - name: Download shared
        uses: actions/download-artifact@v2
        with:
          name: darwinia-artifact
          path: shared
      - name: Install subwasm
        env:
          # Currently, Same with srtool version v0.9.27
          # https://github.com/paritytech/srtool/blob/v0.9.27/Dockerfile#L19
          SUBWASM_VERSION: 0.15.0
        run: |
          curl -L https://github.com/chevdor/subwasm/releases/download/v${SUBWASM_VERSION}/subwasm_linux_amd64_v${SUBWASM_VERSION}.deb \
            --output subwasm.deb && \
            sudo dpkg -i subwasm.deb && \
            subwasm --version
      - name: Generate subwasm info for ${{ matrix.runtime }}
        run: |
          Z_WASM=shared/${{ matrix.runtime }}/*.compact.compressed.wasm
          echo '${{ matrix.runtime }} compressed compact subwasm info'
          subwasm -j info $Z_WASM | tee shared/${{ matrix.runtime }}/${{ matrix.runtime }}.compact.compressed.json
      - name: Upload shared
        uses: actions/upload-artifact@v2.2.4
        with:
          name: darwinia-artifact
          path: shared

  ##
  # Build docker image
  ##
  build-docker-image:
    name: Build image
    runs-on: ubuntu-latest
    needs: [build-package]
    steps:
      - name: Fetch latest code
        uses: actions/checkout@v3
      - name: Download shared
        uses: actions/download-artifact@v2
        with:
          name: darwinia-artifact
          path: shared
      - name: Docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.QUAY_IO_BOT_USERNAME }}
          password: ${{ secrets.QUAY_IO_BOT_PASSWORD }}
          registry: quay.io
      - name: Get tag
        uses: olegtarasov/get-tag@v2.1
        id: tag-name
      - name: Hash commit
        uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 7
      - name: Extract shared
        run: |
          mkdir -p dist
          tar -xvf shared/darwinia-parachain-x86_64-linux-gnu.tar.bz2 -C dist/
      - name: Build and publish docker image
        run: |
          IMAGE_NAME=darwinia-parachain
          IMAGE_PREFIX=quay.io/darwinia-network
          IMAGE_PUSH_NAME_TAG=${IMAGE_PREFIX}/${IMAGE_NAME}:${GIT_TAG_NAME}
          IMAGE_PUSH_NAME_SHA=${IMAGE_PREFIX}/${IMAGE_NAME}:sha-${SHA}
          docker build \
            -t ${IMAGE_PUSH_NAME_TAG} \
            -t ${IMAGE_PUSH_NAME_SHA} \
            -f .maintain/docker/Dockerfile \
            .
          docker push ${IMAGE_PUSH_NAME_TAG}
          docker push ${IMAGE_PUSH_NAME_SHA}

  publish-release:
    name: Publish release
    runs-on: ubuntu-latest
    needs: [build-subwasm, build-docker-image]
    steps:
      - name: Fetch latest code
        uses: actions/checkout@v3
      - name: Download shared
        uses: actions/download-artifact@v2
        with:
          name: darwinia-artifact
          path: shared
      - name: Prepare deploy folder
        run: |
          mkdir -p deploy

          mv shared/darwinia-parachain-x86_64-linux-gnu.tar.bz2 deploy/
          mv shared/darwinia-parachain-x86_64-linux-gnu.tar.zst deploy/

          mv shared/crab-parachain-runtime/*.compressed.wasm deploy/
          mv shared/crab-parachain-runtime/*.compressed.json deploy/
          mv shared/darwinia-parachain-runtime/*.compressed.wasm deploy/
          mv shared/darwinia-parachain-runtime/*.compressed.json deploy/
      - name: Hash file
        run: |
          (cd deploy && sha256sum * | tee sha256sums.txt)
      - name: Get tag
        uses: olegtarasov/get-tag@v2.1
        id: tag-name
      - name: Hash commit
        uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 7
      - name: Generate template data
        run: |
          REGEX_RUNTIME_VERSION='s/.*-\([0-9]*\)[ ].*/\1/g'
          FILE_CRAB_PARACHAIN=deploy/crab-parachain-runtime.compact.compressed.json
          FILE_DARWINIA_PARACHAIN=deploy/darwinia-parachain-runtime.compact.compressed.json

          CODE_HASH_CRAB_PARACHAIN=$(cat ${FILE_CRAB_PARACHAIN} | jq -r .blake2_256)
          CODE_HASH_DARWINIA_PARACHAIN=$(cat ${FILE_DARWINIA_PARACHAIN} | jq -r .blake2_256)
          RUNTIME_VERSION_CRAB_PARACHAIN=$(cat ${FILE_CRAB_PARACHAIN} | jq -r .core_version | sed "${REGEX_RUNTIME_VERSION}")
          RUNTIME_VERSION_DARWINIA_PARACHAIN=$(cat ${FILE_DARWINIA_PARACHAIN} | jq -r .core_version | sed "${REGEX_RUNTIME_VERSION}")

          echo 'Template data:'
          jq -n \
            --arg crab_parachain_code_hash "$CODE_HASH_CRAB_PARACHAIN" \
            --arg darwinia_parachain_code_hash "$CODE_HASH_DARWINIA_PARACHAIN" \
            --arg crab_parachain_runtime_version "$RUNTIME_VERSION_CRAB_PARACHAIN" \
            --arg darwinia_parachain_runtime_version "$RUNTIME_VERSION_DARWINIA_PARACHAIN" \
            --arg tag "$GIT_TAG_NAME" \
            --arg sha "$SHA" \
            '{
              crab_parachain_code_hash: $crab_parachain_code_hash,
              darwinia_parachain_code_hash: $darwinia_parachain_code_hash,
              crab_parachain_runtime_version: $crab_parachain_runtime_version,
              darwinia_parachain_runtime_version: $darwinia_parachain_runtime_version,
              tag: $tag,
              sha: $sha
            }' | tee template_data.json
      - name: Render release page
        uses: jayamanikharyono/jinja-action@v0.1
        with:
          datafile: template_data.json
          path: .github/release-template.md
      - name: Publish github release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            deploy/*
          body_path: ".github/release-template.md"
          token: ${{ secrets.GITHUB_TOKEN }}

  clean-artifacts:
    name: Clean artifacts
    runs-on: ubuntu-latest
    needs: [publish-release]
    if: always()
    steps:
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: darwinia-artifact
